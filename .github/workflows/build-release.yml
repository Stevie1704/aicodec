on: [push, pull_request]

jobs:
  build:
    name: Build on ${{ matrix.platform }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            platform: Linux
            arch: amd64
          - os: ubuntu-22.04
            platform: Linux
            arch: arm64
          - os: windows-latest
            platform: Windows
            arch: amd64
          - os: macos-13
            platform: Darwin
            arch: amd64
          - os: macos-14
            platform: Darwin
            arch: arm64

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up QEMU for ARM build
        if: matrix.arch == 'arm64' && matrix.platform == 'Linux'
        uses: docker/setup-qemu-action@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]

      - name: Build with PyInstaller
        shell: bash
        run: |
          SEPARATOR=":"
          if [ "$RUNNER_OS" == "Windows" ]; then
            SEPARATOR=";"
          fi
          pyinstaller --name aicodec --clean \
            --add-data "aicodec/assets${SEPARATOR}aicodec/assets" \
            --add-data "aicodec/infrastructure/web/ui${SEPARATOR}aicodec/infrastructure/web/ui" \
      - name: Create lowercase platform variable
        id: vars
        shell: bash
        run: echo "platform_lower=$(echo '${{ matrix.platform }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
      - name: Package the output as a zip archive
        run: 7z a aicodec-${{ steps.vars.outputs.platform_lower }}-${{ matrix.arch }}.zip ./dist/aicodec/*
      - name: Upload build artifact for release job
        uses: actions/upload-artifact@v4
        with:
          name: aicodec-${{ steps.vars.outputs.platform_lower }}-${{ matrix.arch }}
          path: aicodec-*.zip
