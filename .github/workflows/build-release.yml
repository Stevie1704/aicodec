name: Build and Release Executables

on:
  push:
    tags:
      - 'v*'

# Add permissions for the workflow to create a release
permissions:
  contents: write

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]

      - name: Build with PyInstaller
        shell: bash
        run: |
          SEPARATOR=":"
          if [ "$RUNNER_OS" == "Windows" ]; then
            SEPARATOR=";"
          fi
          pyinstaller --name aicodec --clean \
            --add-data "aicodec/assets${SEPARATOR}aicodec/assets" \
            --add-data "aicodec/infrastructure/web/ui${SEPARATOR}aicodec/infrastructure/web/ui" \
            run_aicodec.py

      - name: Package the output as a zip archive
        run: 7z a aicodec-${{ runner.os }}.zip ./dist/aicodec/*

      # This step now uploads the artifact so the 'release' job can find it
      - name: Upload build artifact for release job
        uses: actions/upload-artifact@v4
        with:
          name: aicodec-${{ runner.os }}
          path: aicodec-*.zip

  release:
    name: Create GitHub Release
    # This job runs only after all 'build' jobs have succeeded
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts # Downloads all artifacts into an 'artifacts' directory
      
      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          # This will find all the .zip files from the artifacts and upload them
          files: artifacts/*/*.zip